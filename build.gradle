buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath "gradle.plugin.se.bjurr.gitchangelog:git-changelog-gradle-plugin:1.47"
    }
}

plugins {
    id "com.matthewprenger.cursegradle" version "1.0.9"
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: "se.bjurr.gitchangelog.git-changelog-gradle-plugin"

String semver = "${version_major}.${version_minor}.${version_patch}"
version = "${semver}.${getBuildNumber()}"
if (project.hasProperty('buildQualifier')) {
    version = project.version + '-' + project.buildQualifier
}
group = "net.sengir.forestry" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "forestry_" + mcversion

ext.dirDest = './build/dist'

// java version
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
compileJava.sourceCompatibility = JavaVersion.VERSION_1_8
compileJava.targetCompatibility = JavaVersion.VERSION_1_8

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
compileJava {
    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
}

minecraft {
    mappings channel: 'snapshot', version: mcp_mappings

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/')

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    /*maven {
        url = 'http://maven.mcmoddev.com'
    }*/
    maven {
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        // FTB GUI Library
        name = "LatvianModder maven"
        url 'https://maven.latmod.com/'
    }
    /*maven {
        name = "ic2"
        url = "http://maven.ic2.player.to/"
    }
    maven {
        name = "Modmuss50"
        url = "http://maven.modmuss50.me"
    }
    maven {
        url = 'https://mod-buildcraft.com/maven'
    }*/
}

dependencies {
    minecraft "net.minecraftforge:forge:${forgeversion}"

    /*deobfProvided "net.darkhax.tesla:Tesla-${tesla_mcversion}:${tesla_version}"*/
    compileOnly fg.deobf("mezz.jei:jei-${jei_mcversion}:${jei_version}:api")

    // require FTB GUI Library
    compile fg.deobf("com.feed_the_beast.mods:ftb-gui-library:${ftb_gui_lib_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-${jei_mcversion}:${jei_version}")
    /*deobfProvided "net.industrial-craft:industrialcraft-2:${ic2_version}:api"
    deobfProvided "TechReborn:TechReborn-${TR_mcversion}:${TR_version}:api"
    deobfProvided "com.mod-buildcraft:buildcraft-api:${buildcraft_version}"*/
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

configurations {
    api
    compile.extendsFrom api
}

// prevent java 8's strict doclint for javadocs from failing builds
if (JavaVersion.current().isJava8Compatible()) {
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

jar {
    from sourceSets.main.output.classesDirs
    from sourceSets.main.output.resourcesDir

    manifest {
        attributes([
                "Specification-Title"     : "Forestry",
                "Specification-Vendor"    : "SirSengir",
                "Specification-Version"   : "${semver}",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "SirSengir",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "FMLAT"                   : 'forestry_at.cfg'
        ])
    }
}

task apiJar(type: Jar) {
    // TODO: when FG bug is fixed, remove allSource from the api jar.
    // https://github.com/MinecraftForge/ForgeGradle/issues/369
    // Gradle should be able to pull them from the -sources jar.
    from sourceSets.main.allSource
    from sourceSets.main.output
    include 'forestry/api/**'
    classifier = 'api'
}

artifacts {
    archives apiJar
}

uploadArchives {
    repositories {
        if (project.hasProperty('mavenDir')) {
            mavenDeployer {
                repository(url: "file://" + mavenDir)
            }
        } else {
            println 'Archives upload disabled, mavenDir in gradle.properties is missing.'
        }
    }
}

def getBuildNumber() {
    return "$System.env.BUILD_NUMBER" != "null" ? "$System.env.BUILD_NUMBER" : "0"
}

idea {
    module {
        for (String excludeDirName in ["run", "out", "logs", "gradle"]) {
            File excludeDir = new File(projectDir, excludeDirName)
            excludeDirs.add(excludeDir)
        }
    }
}
